<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAA+dJREFUeF7t3VnItGMYwPGx72Qne5QlCUVCIickspxIIokTJEuiJJHEiSSSOJFE
        4kSWUDgREXFgj7Kn7NnX/8X31veN651n5p1nm/v5/+t38B3Mwdz31dt3zfvOzMjMzMzMzMzMzMzMzMzM
        zMzMzMzMzMzMzMzMzMzMzMzMzKzPbYIjsfO//7JBdQh+xN+r3AAbSBviQyxd/pJjYQPoKoxffngD68AK
        bkf8gGwAwvmwgrsH2cUv+RJbwArsYPyF7OJXdzOssNbC88gufNxv2AtWUKchu+zlPAIrpOXWvirHwAro
        SmQXXOV1uBYueDtg0tpX5TzYAnc3soudlmvhAncQpln7qtwEW7Bi7XsO2YXO6lfsCVugTkV2mSv1MGxB
        2gAfILvIeRwNW4CuQHaB83oNroU9b3t8j+wC63AurMfdhezi6vIFNof1sANRx9pX5UZYz4q171lkF1a3
        WAv3gPWok5Fd1rjHcW2Faf4P8RCsJ8Xa9z6yixp3Iar6BNljxx0F60GXI7ugTJ0D8CpcCztuO3yH7IIy
        dQ5AOAfWYXciu5jl1D0An2MzWAcdgD+RXcxy6h6A4LuKOijWvmeQXcgkTQzAL9gd1mInIbuMKk0MQHgQ
        1lLr4z1kF1GlqQEI8U5ja6FLkV3ANJocgFewNqzBtsW3yC5gGk0OQDgb1mB3IDv4aTU9AJ9hU1gD7Y9Z
        175xTQ9AuB5Wc7H2PY3swGfRxgD8jN1gNXYissOeVRsDEB6A1VSsfe8iO+hZtTUA4QhYDV2C7IBXos0B
        eBmuhXO2DeZZ+8a1OQDhLNgc3Y7sYFeq7QH4FK6FK6yOtW9c2wMQroPNWKx9TyE70Hl0MQCxFu4Km6ET
        kB3mvLoYgHA/bMrWwzvIDnJeXQ1AOBw2RRcjO8A6dDkAL8G1sKKt8Q2yA6zDR4hf207yO7LH1uFM2IRu
        Q3ZwpYifLvEx9Za0H/5AdnAliXcfWdITyA6sND9hF9hqHY/ssEp1H2xVsfa9heygSnYYjC5CdkBNuAzx
        2vwk8Wdd2WPr9iLiFc9BtxW+RnZATejydYDMGRh0tyI7mKb0bQA+xsYYZPui7bWvbwMQrsEgewzZgTSp
        jwMQX183uO8uPA7ZYTStjwMQ7sVgWhdvIjuIpvV1AMKhGEQXIDuANvRpDRz3AopfC7fEV8gOQKPR6Si6
        W5A9cf0nfl29EYpsbzT5u/ZSXI0iexTZE9aaYi3cCUUV39mbPVnl4pvOimofZE9UufgchOJ6EtmT1Zri
        zTBFfjtJ7NjxN3/xhYxvKxUfZn0KzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzMzM/t9o9A9K67avKAw8
        iAAAAABJRU5ErkJggg==
</value>
  </data>
</root>